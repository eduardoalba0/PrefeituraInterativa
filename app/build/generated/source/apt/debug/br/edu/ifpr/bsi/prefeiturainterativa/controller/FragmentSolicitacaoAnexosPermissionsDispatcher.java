// This file was generated by PermissionsDispatcher. Do not modify!
package br.edu.ifpr.bsi.prefeiturainterativa.controller;

import androidx.annotation.NonNull;
import java.lang.Override;
import java.lang.String;
import java.lang.ref.WeakReference;
import permissions.dispatcher.PermissionRequest;
import permissions.dispatcher.PermissionUtils;

final class FragmentSolicitacaoAnexosPermissionsDispatcher {
  private static final int REQUEST_INSERIRIMAGENS = 1;

  private static final String[] PERMISSION_INSERIRIMAGENS = new String[] {"android.permission.CAMERA","android.permission.READ_EXTERNAL_STORAGE","android.permission.WRITE_EXTERNAL_STORAGE"};

  private FragmentSolicitacaoAnexosPermissionsDispatcher() {
  }

  static void inserirImagensWithPermissionCheck(@NonNull FragmentSolicitacaoAnexos target) {
    if (PermissionUtils.hasSelfPermissions(target.requireActivity(), PERMISSION_INSERIRIMAGENS)) {
      target.inserirImagens();
    } else {
      if (PermissionUtils.shouldShowRequestPermissionRationale(target, PERMISSION_INSERIRIMAGENS)) {
        target.showRationale(new FragmentSolicitacaoAnexosInserirImagensPermissionRequest(target));
      } else {
        target.requestPermissions(PERMISSION_INSERIRIMAGENS, REQUEST_INSERIRIMAGENS);
      }
    }
  }

  static void onRequestPermissionsResult(@NonNull FragmentSolicitacaoAnexos target, int requestCode,
      int[] grantResults) {
    switch (requestCode) {
      case REQUEST_INSERIRIMAGENS:
      if (PermissionUtils.verifyPermissions(grantResults)) {
        target.inserirImagens();
      } else {
        if (!PermissionUtils.shouldShowRequestPermissionRationale(target, PERMISSION_INSERIRIMAGENS)) {
          target.onNeverAskAgain();
        } else {
          target.onPermissionDenied();
        }
      }
      break;
      default:
      break;
    }
  }

  private static final class FragmentSolicitacaoAnexosInserirImagensPermissionRequest implements PermissionRequest {
    private final WeakReference<FragmentSolicitacaoAnexos> weakTarget;

    private FragmentSolicitacaoAnexosInserirImagensPermissionRequest(
        @NonNull FragmentSolicitacaoAnexos target) {
      this.weakTarget = new WeakReference<FragmentSolicitacaoAnexos>(target);
    }

    @Override
    public void proceed() {
      FragmentSolicitacaoAnexos target = weakTarget.get();
      if (target == null) return;
      target.requestPermissions(PERMISSION_INSERIRIMAGENS, REQUEST_INSERIRIMAGENS);
    }

    @Override
    public void cancel() {
      FragmentSolicitacaoAnexos target = weakTarget.get();
      if (target == null) return;
      target.onPermissionDenied();
    }
  }
}
